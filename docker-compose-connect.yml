version: "2.1"

networks:
  aether:
    external:
      name: aether_internal

services:

  # ---------------------------------
  # Kafka & Zookeeper
  # ---------------------------------

  zookeeper:
    extends:
      file: ./docker-compose-base.yml
      service: zookeeper-base
    restart: on-failure
    networks:
      - aether

  kafka:
    extends:
      file: ./docker-compose-base.yml
      service: kafka-base
    restart: on-failure
    depends_on:
      - zookeeper
    links:
      - zookeeper
    networks:
      - aether

  # ---------------------------------
  # Aether Kafka Producer
  # ---------------------------------

  producer:
    extends:
      file: ./docker-compose-base.yml
      service: aether-producer-base
    restart: on-failure
    environment:
      # These variables will override the ones indicated in the settings file
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092

      KERNEL_URL: ${GCP_KERNEL_URL}
      KERNEL_USERNAME: ${KERNEL_ADMIN_USERNAME}
      KERNEL_PASSWORD: ${KERNEL_ADMIN_PASSWORD}
      POSTGRES_HOST: cloud-proxy
      POSTGRES_DBNAME: aether
      POSTGRES_USER: ${KERNEL_READONLY_DB_USERNAME}
      POSTGRES_PASSWORD: ${KERNEL_READONLY_DB_PASSWORD}

    links:
      - kafka
      - zookeeper
      - cloud-proxy
    networks:
      - aether

  # ---------------------------------
  # GCP DB Proxy
  # ---------------------------------

  cloud-proxy:
    image: gcr.io/cloudsql-docker/gce-proxy:1.11
    command: ["/cloud_sql_proxy",
                    "-instances=${GCP_DB_PATH}=tcp:0.0.0.0:5432",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
    volumes:
      # point to your credentials file
      - ${GCP_CREDENTIALS_PATH}:/secrets/cloudsql/credentials.json
    ports:
      - "5432:5432"
    networks:
      - aether